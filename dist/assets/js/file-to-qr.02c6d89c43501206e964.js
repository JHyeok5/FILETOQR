"use strict";(self.webpackChunkfiletoqr=self.webpackChunkfiletoqr||[]).push([[591],{629:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('/* harmony import */ var _qr_generator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(890);\n/* harmony import */ var _utils_file_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(389);\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return r; }; var t, r = {}, e = Object.prototype, n = e.hasOwnProperty, o = "function" == typeof Symbol ? Symbol : {}, i = o.iterator || "@@iterator", a = o.asyncIterator || "@@asyncIterator", u = o.toStringTag || "@@toStringTag"; function c(t, r, e, n) { return Object.defineProperty(t, r, { value: e, enumerable: !n, configurable: !n, writable: !n }); } try { c({}, ""); } catch (t) { c = function c(t, r, e) { return t[r] = e; }; } function h(r, e, n, o) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype); return c(a, "_invoke", function (r, e, n) { var o = 1; return function (i, a) { if (3 === o) throw Error("Generator is already running"); if (4 === o) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var u = n.delegate; if (u) { var c = d(u, n); if (c) { if (c === f) continue; return c; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (1 === o) throw o = 4, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = 3; var h = s(r, e, n); if ("normal" === h.type) { if (o = n.done ? 4 : 2, h.arg === f) continue; return { value: h.arg, done: n.done }; } "throw" === h.type && (o = 4, n.method = "throw", n.arg = h.arg); } }; }(r, n, new Context(o || [])), !0), a; } function s(t, r, e) { try { return { type: "normal", arg: t.call(r, e) }; } catch (t) { return { type: "throw", arg: t }; } } r.wrap = h; var f = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var l = {}; c(l, i, function () { return this; }); var p = Object.getPrototypeOf, y = p && p(p(x([]))); y && y !== e && n.call(y, i) && (l = y); var v = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(l); function g(t) { ["next", "throw", "return"].forEach(function (r) { c(t, r, function (t) { return this._invoke(r, t); }); }); } function AsyncIterator(t, r) { function e(o, i, a, u) { var c = s(t[o], t, i); if ("throw" !== c.type) { var h = c.arg, f = h.value; return f && "object" == _typeof(f) && n.call(f, "__await") ? r.resolve(f.__await).then(function (t) { e("next", t, a, u); }, function (t) { e("throw", t, a, u); }) : r.resolve(f).then(function (t) { h.value = t, a(h); }, function (t) { return e("throw", t, a, u); }); } u(c.arg); } var o; c(this, "_invoke", function (t, n) { function i() { return new r(function (r, o) { e(t, n, r, o); }); } return o = o ? o.then(i, i) : i(); }, !0); } function d(r, e) { var n = e.method, o = r.i[n]; if (o === t) return e.delegate = null, "throw" === n && r.i["return"] && (e.method = "return", e.arg = t, d(r, e), "throw" === e.method) || "return" !== n && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), f; var i = s(o, r.i, e.arg); if ("throw" === i.type) return e.method = "throw", e.arg = i.arg, e.delegate = null, f; var a = i.arg; return a ? a.done ? (e[r.r] = a.value, e.next = r.n, "return" !== e.method && (e.method = "next", e.arg = t), e.delegate = null, f) : a : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f); } function w(t) { this.tryEntries.push(t); } function m(r) { var e = r[4] || {}; e.type = "normal", e.arg = t, r[4] = e; } function Context(t) { this.tryEntries = [[-1]], t.forEach(w, this), this.reset(!0); } function x(r) { if (null != r) { var e = r[i]; if (e) return e.call(r); if ("function" == typeof r.next) return r; if (!isNaN(r.length)) { var o = -1, a = function e() { for (; ++o < r.length;) if (n.call(r, o)) return e.value = r[o], e.done = !1, e; return e.value = t, e.done = !0, e; }; return a.next = a; } } throw new TypeError(_typeof(r) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, c(v, "constructor", GeneratorFunctionPrototype), c(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = c(GeneratorFunctionPrototype, u, "GeneratorFunction"), r.isGeneratorFunction = function (t) { var r = "function" == typeof t && t.constructor; return !!r && (r === GeneratorFunction || "GeneratorFunction" === (r.displayName || r.name)); }, r.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, c(t, u, "GeneratorFunction")), t.prototype = Object.create(v), t; }, r.awrap = function (t) { return { __await: t }; }, g(AsyncIterator.prototype), c(AsyncIterator.prototype, a, function () { return this; }), r.AsyncIterator = AsyncIterator, r.async = function (t, e, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(h(t, e, n, o), i); return r.isGeneratorFunction(e) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, g(v), c(v, u, "Generator"), c(v, i, function () { return this; }), c(v, "toString", function () { return "[object Generator]"; }), r.keys = function (t) { var r = Object(t), e = []; for (var n in r) e.unshift(n); return function t() { for (; e.length;) if ((n = e.pop()) in r) return t.value = n, t.done = !1, t; return t.done = !0, t; }; }, r.values = x, Context.prototype = { constructor: Context, reset: function reset(r) { if (this.prev = this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(m), !r) for (var e in this) "t" === e.charAt(0) && n.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0][4]; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(r) { if (this.done) throw r; var e = this; function n(t) { a.type = "throw", a.arg = r, e.next = t; } for (var o = e.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i[4], u = this.prev, c = i[1], h = i[2]; if (-1 === i[0]) return n("end"), !1; if (!c && !h) throw Error("try statement without catch or finally"); if (null != i[0] && i[0] <= u) { if (u < c) return this.method = "next", this.arg = t, n(c), !0; if (u < h) return n(h), !1; } } }, abrupt: function abrupt(t, r) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var n = this.tryEntries[e]; if (n[0] > -1 && n[0] <= this.prev && this.prev < n[2]) { var o = n; break; } } o && ("break" === t || "continue" === t) && o[0] <= r && r <= o[2] && (o = null); var i = o ? o[4] : {}; return i.type = t, i.arg = r, o ? (this.method = "next", this.next = o[2], f) : this.complete(i); }, complete: function complete(t, r) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && r && (this.next = r), f; }, finish: function finish(t) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var e = this.tryEntries[r]; if (e[2] === t) return this.complete(e[4], e[3]), m(e), f; } }, "catch": function _catch(t) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var e = this.tryEntries[r]; if (e[0] === t) { var n = e[4]; if ("throw" === n.type) { var o = n.arg; m(e); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(r, e, n) { return this.delegate = { i: x(r), r: e, n: n }, "next" === this.method && (this.arg = t), f; } }, r; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }\n/**\r\n * file-to-qr-core.js - FileToQR 파일-QR 변환 통합 모듈 (1차 통합 스켈레톤)\r\n * 기존 file-to-qr-converter.js, file-to-qr.js의 공통 로직을 통합\r\n * - 파일 업로드/드래그앤드롭/이벤트 처리 (공통)\r\n * - 파일 타입/용량 판별 → 단일 QR/다중 QR 분기\r\n * - QR 생성(공통 QRGenerator 활용)\r\n * - 파일 정보/오류/상태 표시(공통)\r\n * - 기존 개선 내역(data-i18n, 오류 메시지 등) 반영\r\n *\r\n * 실제 기능 구현은 점진적으로 이관/통합할 예정 (1차 스켈레톤)\r\n */\n\n\n\nvar FileToQRCore = {\n  // 내부 상태\n  state: {\n    initialized: false,\n    file: null,\n    fileContent: null,\n    fileType: null,\n    maxTextFileSize: 1024 * 5,\n    // 5KB\n    maxFileSize: 5 * 1024 * 1024,\n    // 5MB\n    qrCanvas: null,\n    qrChunks: [],\n    currentChunkIndex: 0,\n    totalChunks: 0,\n    metadataQR: null\n  },\n  /**\r\n   * 모듈 초기화 (공통)\r\n   */\n  init: function init() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!_this.state.initialized) {\n              _context.next = 2;\n              break;\n            }\n            return _context.abrupt("return", true);\n          case 2:\n            _context.next = 4;\n            return _qr_generator_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A.init();\n          case 4:\n            // UI 요소/이벤트 초기화 (공통)\n            _this._initUI();\n            _this._registerEventListeners();\n            _this.state.initialized = true;\n            return _context.abrupt("return", true);\n          case 8:\n          case "end":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  /**\r\n   * UI 요소 초기화 (공통)\r\n   * - 업로드/변환/다운로드/상태 표시 등\r\n   * - data-i18n, 오류 메시지 등 개선 내역 반영\r\n   */\n  _initUI: function _initUI() {\n    // 주요 UI 요소 캐싱 (공통)\n    this.ui = {\n      uploadInput: document.getElementById(\'file-upload-input\'),\n      generateBtn: document.getElementById(\'generate-qr\'),\n      downloadBtn: document.getElementById(\'download-qr\'),\n      retryBtn: document.getElementById(\'retry-btn\'),\n      fileInfo: document.getElementById(\'file-info\'),\n      qrPreview: document.getElementById(\'qr-preview-container\') || document.getElementById(\'qr-preview\'),\n      errorMsg: document.getElementById(\'qr-error-msg\')\n    };\n    // 초기 UI 상태 설정\n    this._updateUIState(\'init\');\n  },\n  /**\r\n   * UI 상태/버튼 활성화 등 일관성 관리 (공통)\r\n   * @param {string} state - \'init\' | \'fileSelected\' | \'qrGenerated\' | \'error\'\r\n   */\n  _updateUIState: function _updateUIState(state) {\n    // 모든 버튼/상태 초기화\n    if (!this.ui) return;\n    var _this$ui = this.ui,\n      generateBtn = _this$ui.generateBtn,\n      downloadBtn = _this$ui.downloadBtn,\n      retryBtn = _this$ui.retryBtn,\n      fileInfo = _this$ui.fileInfo,\n      errorMsg = _this$ui.errorMsg;\n    if (generateBtn) generateBtn.disabled = true;\n    if (downloadBtn) downloadBtn.disabled = true;\n    if (retryBtn) retryBtn.disabled = true;\n    if (fileInfo) fileInfo.textContent = \'\';\n    if (errorMsg) errorMsg.textContent = \'\';\n    // 상태별 UI 처리\n    switch (state) {\n      case \'fileSelected\':\n        if (generateBtn) generateBtn.disabled = false;\n        if (retryBtn) retryBtn.disabled = false;\n        break;\n      case \'qrGenerated\':\n        if (downloadBtn) downloadBtn.disabled = false;\n        if (retryBtn) retryBtn.disabled = false;\n        break;\n      case \'error\':\n        if (retryBtn) retryBtn.disabled = false;\n        break;\n      case \'init\':\n      default:\n        // 모두 비활성화\n        break;\n    }\n  },\n  /**\r\n   * 이벤트 리스너 등록 (공통)\r\n   */\n  _registerEventListeners: function _registerEventListeners() {\n    var _this2 = this;\n    if (!this.ui) return;\n    var _this$ui2 = this.ui,\n      uploadInput = _this$ui2.uploadInput,\n      generateBtn = _this$ui2.generateBtn,\n      downloadBtn = _this$ui2.downloadBtn,\n      retryBtn = _this$ui2.retryBtn;\n    // 파일 업로드 input\n    if (uploadInput) {\n      uploadInput.addEventListener(\'change\', function (e) {\n        var file = e.target.files && e.target.files[0];\n        if (file) _this2.handleFileUpload(file);\n      });\n    }\n    // QR 생성 버튼\n    if (generateBtn) {\n      generateBtn.addEventListener(\'click\', function () {\n        if (_this2.state.file) _this2.generateQRCode();\n      });\n    }\n    // 다운로드 버튼\n    if (downloadBtn) {\n      downloadBtn.addEventListener(\'click\', function () {\n        _this2._handleDownload();\n      });\n    }\n    // 재시도 버튼\n    if (retryBtn) {\n      retryBtn.addEventListener(\'click\', function () {\n        _this2._reset();\n      });\n    }\n  },\n  /**\r\n   * 파일 업로드/드래그앤드롭 처리 (공통)\r\n   * - 파일 타입/용량 판별 → 단일 QR/다중 QR 자동 분기\r\n   */\n  handleFileUpload: function handleFileUpload(file) {\n    var _this3 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var content, arrayBuffer, chunks, metadata;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (file) {\n              _context2.next = 2;\n              break;\n            }\n            return _context2.abrupt("return");\n          case 2:\n            _this3.state.file = file;\n            _this3.state.fileType = file.type;\n            _this3._updateUIState(\'fileSelected\');\n            // 텍스트 파일(5KB 이하): 단일 QR, 그 외(5MB 이하): 다중 QR\n            if (!((file.type.match(\'text/plain\') || file.name.endsWith(\'.txt\')) && file.size <= _this3.state.maxTextFileSize)) {\n              _context2.next = 21;\n              break;\n            }\n            _context2.prev = 6;\n            _context2.next = 9;\n            return _this3._readTextFileContent(file);\n          case 9:\n            content = _context2.sent;\n            _this3.state.fileContent = content;\n            // 파일 정보 표시\n            _this3._showFileInfo(file, content);\n            // QR 코드 생성\n            _context2.next = 14;\n            return _this3._generateSingleQRCode(content);\n          case 14:\n            _context2.next = 19;\n            break;\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2["catch"](6);\n            _this3._showError(_this3._t(\'errors.conversionFailed\', \'변환 중 오류가 발생했습니다\'));\n          case 19:\n            _context2.next = 43;\n            break;\n          case 21:\n            if (!(file.size <= _this3.state.maxFileSize)) {\n              _context2.next = 42;\n              break;\n            }\n            _context2.prev = 22;\n            _context2.next = 25;\n            return _this3._readFileAsArrayBuffer(file);\n          case 25:\n            arrayBuffer = _context2.sent;\n            // 데이터를 청크로 분할\n            chunks = _this3._splitIntoChunks(arrayBuffer, 1500); // 1500바이트 청크\n            _this3.state.qrChunks = chunks;\n            _this3.state.currentChunkIndex = 0;\n            _this3.state.totalChunks = chunks.length;\n            // 메타데이터 생성\n            metadata = {\n              fileName: file.name,\n              fileSize: file.size,\n              fileType: file.type || _this3._getMimeTypeFromFileName(file.name),\n              totalChunks: chunks.length,\n              chunkSize: 1500,\n              dateCreated: new Date().toISOString()\n            }; // 메타데이터 QR 코드 생성\n            _context2.next = 33;\n            return _this3._generateMetadataQR(metadata);\n          case 33:\n            _this3.state.metadataQR = _context2.sent;\n            // 메타데이터 QR 표시\n            _this3._displayMetadataQRCode(metadata, _this3.state.metadataQR);\n            // UI 상태 업데이트 (탐색 버튼 등)\n            // TODO: UI 상태/버튼 활성화 등 통합\n            _context2.next = 40;\n            break;\n          case 37:\n            _context2.prev = 37;\n            _context2.t1 = _context2["catch"](22);\n            _this3._showError(_this3._t(\'errors.conversionFailed\', \'변환 중 오류가 발생했습니다\'));\n          case 40:\n            _context2.next = 43;\n            break;\n          case 42:\n            // 오류: 파일 크기 초과\n            _this3._showError(_this3._t(\'errors.fileTooLarge\', \'파일 크기가 너무 큽니다\'));\n          case 43:\n          case "end":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[6, 16], [22, 37]]);\n    }))();\n  },\n  /**\r\n   * 텍스트 파일 내용 읽기 (공통)\r\n   */\n  _readTextFileContent: function _readTextFileContent(file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n      reader.onload = function (event) {\n        return resolve(event.target.result);\n      };\n      reader.onerror = function (error) {\n        return reject(error);\n      };\n      reader.readAsText(file);\n    });\n  },\n  /**\r\n   * 파일을 ArrayBuffer로 읽기 (공통)\r\n   */\n  _readFileAsArrayBuffer: function _readFileAsArrayBuffer(file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n      reader.onload = function () {\n        return resolve(reader.result);\n      };\n      reader.onerror = function () {\n        return reject(new Error(\'파일 읽기 실패\'));\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  },\n  /**\r\n   * ArrayBuffer를 청크로 분할 (공통)\r\n   */\n  _splitIntoChunks: function _splitIntoChunks(buffer, chunkSize) {\n    var uint8Array = new Uint8Array(buffer);\n    var chunks = [];\n    for (var i = 0; i < uint8Array.length; i += chunkSize) {\n      var chunkArray = uint8Array.slice(i, i + chunkSize);\n      var base64Chunk = this._arrayBufferToBase64(chunkArray);\n      chunks.push(base64Chunk);\n    }\n    return chunks;\n  },\n  /**\r\n   * Uint8Array를 Base64 문자열로 변환 (공통)\r\n   */\n  _arrayBufferToBase64: function _arrayBufferToBase64(buffer) {\n    var binary = \'\';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  },\n  /**\r\n   * 파일명에서 MIME 타입 추론 (공통)\r\n   */\n  _getMimeTypeFromFileName: function _getMimeTypeFromFileName(fileName) {\n    if (!_utils_file_utils_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A || !_utils_file_utils_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A.getFileExtension || !_utils_file_utils_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A.getMimeType) return \'\';\n    var extension = _utils_file_utils_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A.getFileExtension(fileName);\n    return _utils_file_utils_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A.getMimeType(extension);\n  },\n  /**\r\n   * 메타데이터 QR 코드 생성 (공통)\r\n   */\n  _generateMetadataQR: function _generateMetadataQR(metadata) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var metadataString;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            metadataString = JSON.stringify(_objectSpread({\n              type: \'FileToQR_Metadata\',\n              version: \'1.0\'\n            }, metadata));\n            _context3.next = 3;\n            return _qr_generator_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A.generateQRCode({\n              content: metadataString,\n              size: 256,\n              errorCorrectionLevel: \'H\'\n            });\n          case 3:\n            return _context3.abrupt("return", _context3.sent);\n          case 4:\n          case "end":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }))();\n  },\n  /**\r\n   * 메타데이터 QR 코드 표시 (공통)\r\n   */\n  _displayMetadataQRCode: function _displayMetadataQRCode(metadata, metadataQR) {\n    var qrPreview = document.getElementById(\'qr-preview-container\') || document.getElementById(\'qr-preview\');\n    if (!qrPreview || !metadataQR) return;\n    qrPreview.innerHTML = \'\';\n    qrPreview.appendChild(metadataQR);\n    // 설명 텍스트 추가\n    var infoDiv = document.createElement(\'div\');\n    infoDiv.className = \'text-center mt-4 text-gray-700\';\n    infoDiv.innerHTML = "<h3 class=\\"font-medium\\">\\uBA54\\uD0C0\\uB370\\uC774\\uD130 QR \\uCF54\\uB4DC</h3><p class=\\"text-sm\\">\\uC774 QR \\uCF54\\uB4DC\\uB97C \\uBA3C\\uC800 \\uC2A4\\uCE94\\uD558\\uC138\\uC694. \\uCD1D ".concat(this.state.totalChunks, "\\uAC1C\\uC758 QR \\uCF54\\uB4DC\\uAC00 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.</p>");\n    qrPreview.appendChild(infoDiv);\n    // TODO: 탐색 버튼 등 UI 통합\n  },\n  /**\r\n   * 단일 QR 코드 생성 (텍스트 파일)\r\n   */\n  _generateSingleQRCode: function _generateSingleQRCode(content) {\n    var _this4 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var qrContainer, canvas;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            // QRGenerator 활용\n            qrContainer = document.getElementById(\'qr-preview-container\') || document.getElementById(\'qr-preview\');\n            if (qrContainer) {\n              _context4.next = 3;\n              break;\n            }\n            return _context4.abrupt("return");\n          case 3:\n            qrContainer.innerHTML = \'\';\n            canvas = document.createElement(\'canvas\');\n            canvas.width = 256;\n            canvas.height = 256;\n            qrContainer.appendChild(canvas);\n            _this4.state.qrCanvas = canvas;\n            _context4.prev = 9;\n            _context4.next = 12;\n            return _qr_generator_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A.state.qrLibrary.toCanvas(canvas, content, {\n              width: 256,\n              margin: 4,\n              color: {\n                dark: \'#000000\',\n                light: \'#ffffff\'\n              },\n              errorCorrectionLevel: \'M\'\n            });\n          case 12:\n            canvas.style.maxWidth = \'100%\';\n            canvas.style.height = \'auto\';\n            canvas.classList.add(\'shadow-md\', \'rounded-md\');\n            _context4.next = 20;\n            break;\n          case 17:\n            _context4.prev = 17;\n            _context4.t0 = _context4["catch"](9);\n            _this4._showError(_this4._t(\'errors.conversionFailed\', \'QR 코드 생성에 실패했습니다.\'));\n          case 20:\n          case "end":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[9, 17]]);\n    }))();\n  },\n  /**\r\n   * QR 생성/다운로드/복원 등 공통 함수 (스켈레톤)\r\n   */\n  generateQRCode: function generateQRCode() {\n    var _this5 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!(_this5.state.fileType && _this5.state.fileType.match(\'text/plain\') || _this5.state.file && _this5.state.file.name.endsWith(\'.txt\'))) {\n              _context5.next = 4;\n              break;\n            }\n            // 단일 QR: 이미 생성됨\n            _this5._updateUIState(\'qrGenerated\');\n            _context5.next = 8;\n            break;\n          case 4:\n            if (!(_this5.state.qrChunks && _this5.state.qrChunks.length > 0)) {\n              _context5.next = 8;\n              break;\n            }\n            _context5.next = 7;\n            return _this5._showChunkQRCode(0);\n          case 7:\n            _this5._updateUIState(\'qrGenerated\');\n          case 8:\n          case "end":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }))();\n  },\n  /**\r\n   * 단일 QR 다운로드 처리\r\n   */\n  _downloadSingleQRCode: function _downloadSingleQRCode() {\n    if (!this.state.qrCanvas) return;\n    var link = document.createElement(\'a\');\n    link.href = this.state.qrCanvas.toDataURL(\'image/png\');\n    link.download = (this.state.file ? this.state.file.name.replace(/\\.[^/.]+$/, \'\') : \'qrcode\') + \'.png\';\n    link.click();\n  },\n  /**\r\n   * 다중 QR 탐색/다운로드 처리 (스켈레톤)\r\n   */\n  _showChunkQRCode: function _showChunkQRCode(index) {\n    var _this6 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n      var qrPreview, canvas;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!(!_this6.state.qrChunks || index < 0 || index >= _this6.state.qrChunks.length)) {\n              _context6.next = 2;\n              break;\n            }\n            return _context6.abrupt("return");\n          case 2:\n            _this6.state.currentChunkIndex = index;\n            qrPreview = _this6.ui && _this6.ui.qrPreview;\n            if (qrPreview) {\n              _context6.next = 6;\n              break;\n            }\n            return _context6.abrupt("return");\n          case 6:\n            qrPreview.innerHTML = \'\';\n            // QR 생성\n            canvas = document.createElement(\'canvas\');\n            canvas.width = 256;\n            canvas.height = 256;\n            qrPreview.appendChild(canvas);\n            _context6.prev = 11;\n            _context6.next = 14;\n            return _qr_generator_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A.state.qrLibrary.toCanvas(canvas, _this6.state.qrChunks[index], {\n              width: 256,\n              margin: 4,\n              color: {\n                dark: \'#000000\',\n                light: \'#ffffff\'\n              },\n              errorCorrectionLevel: \'M\'\n            });\n          case 14:\n            canvas.style.maxWidth = \'100%\';\n            canvas.style.height = \'auto\';\n            canvas.classList.add(\'shadow-md\', \'rounded-md\');\n            // 탐색/다운로드 버튼 UI 추가\n            _this6._renderChunkNavigationUI(qrPreview, index);\n            _context6.next = 23;\n            break;\n          case 20:\n            _context6.prev = 20;\n            _context6.t0 = _context6["catch"](11);\n            _this6._showError(_this6._t(\'errors.conversionFailed\', \'QR 코드 생성에 실패했습니다.\'));\n          case 23:\n          case "end":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[11, 20]]);\n    }))();\n  },\n  /**\r\n   * 다중 QR 탐색/다운로드 버튼 UI 렌더링 (스켈레톤)\r\n   */\n  _renderChunkNavigationUI: function _renderChunkNavigationUI(container, index) {\n    var _this7 = this;\n    var navDiv = document.createElement(\'div\');\n    navDiv.className = \'flex items-center justify-center gap-2 mt-4\';\n    // 이전 버튼\n    var prevBtn = document.createElement(\'button\');\n    prevBtn.textContent = \'이전\';\n    prevBtn.className = \'px-3 py-1 rounded bg-gray-200 hover:bg-gray-300\';\n    prevBtn.disabled = index === 0;\n    prevBtn.onclick = function () {\n      return _this7._showChunkQRCode(index - 1);\n    };\n    navDiv.appendChild(prevBtn);\n    // 인덱스 표시\n    var idxSpan = document.createElement(\'span\');\n    idxSpan.textContent = "".concat(index + 1, " / ").concat(this.state.totalChunks);\n    idxSpan.className = \'mx-2 text-sm text-gray-600\';\n    navDiv.appendChild(idxSpan);\n    // 다음 버튼\n    var nextBtn = document.createElement(\'button\');\n    nextBtn.textContent = \'다음\';\n    nextBtn.className = \'px-3 py-1 rounded bg-gray-200 hover:bg-gray-300\';\n    nextBtn.disabled = index === this.state.totalChunks - 1;\n    nextBtn.onclick = function () {\n      return _this7._showChunkQRCode(index + 1);\n    };\n    navDiv.appendChild(nextBtn);\n    // 다운로드 버튼\n    var dlBtn = document.createElement(\'button\');\n    dlBtn.textContent = \'이 QR 다운로드\';\n    dlBtn.className = \'px-3 py-1 rounded bg-blue-600 text-white hover:bg-blue-700\';\n    dlBtn.onclick = function () {\n      var canvas = container.querySelector(\'canvas\');\n      if (canvas) {\n        var link = document.createElement(\'a\');\n        link.href = canvas.toDataURL(\'image/png\');\n        link.download = "".concat(_this7.state.file ? _this7.state.file.name.replace(/\\.[^/.]+$/, \'\') : \'file\', "-chunk").concat(index + 1, ".png");\n        link.click();\n      }\n    };\n    navDiv.appendChild(dlBtn);\n    container.appendChild(navDiv);\n  },\n  /**\r\n   * QR 다운로드 처리 (단일/다중 분기)\r\n   */\n  _handleDownload: function _handleDownload() {\n    if (this.state.fileType && this.state.fileType.match(\'text/plain\') || this.state.file && this.state.file.name.endsWith(\'.txt\')) {\n      this._downloadSingleQRCode();\n    } else if (this.state.qrChunks && this.state.qrChunks.length > 0) {\n      // 현재 청크 QR 다운로드\n      var qrPreview = this.ui && this.ui.qrPreview;\n      var canvas = qrPreview && qrPreview.querySelector(\'canvas\');\n      if (canvas) {\n        var link = document.createElement(\'a\');\n        link.href = canvas.toDataURL(\'image/png\');\n        link.download = "".concat(this.state.file ? this.state.file.name.replace(/\\.[^/.]+$/, \'\') : \'file\', "-chunk").concat(this.state.currentChunkIndex + 1, ".png");\n        link.click();\n      }\n    }\n  },\n  /**\r\n   * 재시도/초기화 처리 (스켈레톤)\r\n   */\n  _reset: function _reset() {\n    // 상태/파일/QR/버튼 등 모두 초기화\n    this.state.file = null;\n    this.state.fileContent = null;\n    this.state.fileType = null;\n    this.state.qrCanvas = null;\n    this.state.qrChunks = [];\n    this.state.currentChunkIndex = 0;\n    this.state.totalChunks = 0;\n    this.state.metadataQR = null;\n    if (this.ui) {\n      if (this.ui.uploadInput) this.ui.uploadInput.value = \'\';\n      if (this.ui.fileInfo) this.ui.fileInfo.textContent = \'\';\n      if (this.ui.qrPreview) this.ui.qrPreview.innerHTML = \'\';\n      if (this.ui.errorMsg) this.ui.errorMsg.textContent = \'\';\n    }\n    this._updateUIState(\'init\');\n  },\n  /**\r\n   * 파일 정보/상태/오류 표시 (공통)\r\n   */\n  _showFileInfo: function _showFileInfo(file, content) {\n    // 파일 정보 표시 (공통)\n    if (this.ui && this.ui.fileInfo) {\n      var sizeKB = (file.size / 1024).toFixed(2);\n      this.ui.fileInfo.innerHTML = "<span>".concat(file.name, "</span> <span class=\\"text-gray-500\\">(").concat(sizeKB, " KB)</span>");\n    }\n    this._updateUIState(\'fileSelected\');\n  },\n  _showError: function _showError(message) {\n    // 오류 메시지는 반드시 i18n을 통해 출력해야 함\n    var i18n = window.FileToQR && window.FileToQR.i18n;\n    var errorTitle = i18n && typeof i18n.translate === \'function\' ? i18n.translate(\'errors.errorOccurred\', {}, \'오류 발생\') : \'오류 발생\';\n    if (this.ui && this.ui.errorMsg) {\n      this.ui.errorMsg.textContent = "".concat(errorTitle, ": ").concat(message);\n      this.ui.errorMsg.className = \'text-red-600 text-sm mt-2\';\n    } else {\n      alert("".concat(errorTitle, ": ").concat(message));\n    }\n    this._updateUIState(\'error\');\n  },\n  _t: function _t(key, defaultMsg) {\n    // i18n 번역 헬퍼\n    var i18n = window.FileToQR && window.FileToQR.i18n;\n    return i18n && typeof i18n.translate === \'function\' ? i18n.translate(key, {}, defaultMsg || key) : defaultMsg || key;\n  }\n};\n\n// 글로벌 네임스페이스에 등록\nif (typeof window !== \'undefined\') {\n  window.FileToQR = window.FileToQR || {};\n  window.FileToQR.FileToQRCore = FileToQRCore;\n}\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (FileToQRCore)));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///629\n')}},Q=>{Q.O(0,[80],(()=>{return U=629,Q(Q.s=U);var U}));Q.O()}]);