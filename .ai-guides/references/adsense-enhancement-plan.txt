# 구글 애드센스를 위한 웹사이트 보완 계획 (실행 유형별 구분)

## 코딩을 통해 수정해야 할 사항

### 1. HTML/CSS 구조 변경

#### 헤더 및 푸터 컴포넌트화
- **작업 내용**: `header.html`과 `footer.html` 파일 생성, 모든 페이지에서 공통으로 사용
- **구현 방법**: 
  - 현재 모든 HTML 파일에서 반복되는 헤더/푸터 코드 추출
  - PHP include 또는 JavaScript를 통한 컴포넌트 로드 메커니즘 구현
  - 애드센스 코드를 헤더에 쉽게 삽입할 수 있는 구조 만들기

#### 광고 배치 영역 설정
- **작업 내용**: 페이지 내 광고 표시 영역을 전략적으로 배치
- **구현 방법**:
  - 콘텐츠 상단, 중간, 하단 등에 광고용 div 요소 추가
  - 반응형으로 광고 크기 조절 CSS 규칙 추가

#### 새로운 페이지 템플릿 생성
- **작업 내용**: 블로그 포스트, 파일 형식 가이드, 튜토리얼용 템플릿 개발
- **구현 방법**:
  - 블로그 페이지 템플릿 (`blog-template.html`)
  - 파일 형식 상세 페이지 템플릿 (`file-format-template.html`)
  - 변환 가이드 템플릿 (`conversion-guide-template.html`)

### 2. MVP 기능 강화 - 파일 변환 기능 확장

#### 이미지 파일 변환 확장
- **작업 내용**: 지원하는 이미지 형식 확장 및 변환 기능 강화
- **구현 방법**:
  - 기존 PNG, JPEG, WebP 외에 TIFF, HEIC, AVIF, SVG, EPS, PSD 지원 추가
  - 이미지 리사이징, 회전, 압축 옵션 추가
  - 일괄 변환 기능 구현
- **예상 코드 변경**:
  ```javascript
  // converter.js 파일에 새로운 이미지 형식 변환 함수 추가
  async function convertToTIFF(imageData) {
    // TIFF 변환 로직
  }
  
  async function convertToAVIF(imageData) {
    // AVIF 변환 로직
  }
  
  // 이미지 처리 옵션 추가
  function applyImageOptions(canvas, options) {
    const ctx = canvas.getContext('2d');
    
    // 리사이징
    if (options.resize) {
      // 리사이징 로직
    }
    
    // 회전
    if (options.rotation) {
      ctx.rotate(options.rotation * Math.PI / 180);
    }
    
    // 기타 옵션 적용
    return canvas;
  }
  ```

#### 비디오 파일 변환 모듈 구현
- **작업 내용**: 짧은 영상 파일 변환 기능 추가
- **구현 방법**:
  - MP4, WebM, AVI, MOV, GIF 등 형식 간 변환 지원
  - FFmpeg WebAssembly 버전 통합
  - 동영상 압축, 해상도 조정, 프레임 추출 기능
- **예상 코드 변경**:
  ```javascript
  // video-converter.js 신규 파일 생성
  import { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';

  const ffmpeg = createFFmpeg({ log: true });

  async function convertVideo(inputFile, outputFormat, options = {}) {
    await ffmpeg.load();
    
    // 파일 로드
    ffmpeg.FS('writeFile', 'input', await fetchFile(inputFile));
    
    // 변환 명령 구성
    let args = ['-i', 'input'];
    
    // 해상도 옵션
    if (options.resolution) {
      args = args.concat(['-s', options.resolution]);
    }
    
    // 출력 파일 설정
    args = args.concat([`output.${outputFormat}`]);
    
    // 변환 실행
    await ffmpeg.run(...args);
    
    // 결과 파일 가져오기
    const data = ffmpeg.FS('readFile', `output.${outputFormat}`);
    
    return new Uint8Array(data.buffer);
  }
  ```

#### 텍스트 및 데이터 파일 변환 확장
- **작업 내용**: 더 많은 텍스트 및 데이터 파일 형식 지원
- **구현 방법**:
  - CSV, JSON, YAML 외에 XML, TSV, SQL, Excel 등 지원 확장
  - 인코딩 변환 옵션 (UTF-8, UTF-16, ASCII 등)
  - 데이터 필터링 및 변환 옵션 추가
- **예상 코드 변경**:
  ```javascript
  // 엑셀 파일 처리를 위한 SheetJS 통합
  import * as XLSX from 'xlsx';
  
  // Excel → CSV 변환
  function convertExcelToCSV(excelData) {
    const workbook = XLSX.read(excelData, { type: 'array' });
    const firstSheet = workbook.Sheets[workbook.SheetNames[0]];
    return XLSX.utils.sheet_to_csv(firstSheet);
  }
  
  // Excel → JSON 변환
  function convertExcelToJSON(excelData) {
    const workbook = XLSX.read(excelData, { type: 'array' });
    const firstSheet = workbook.Sheets[workbook.SheetNames[0]];
    return XLSX.utils.sheet_to_json(firstSheet);
  }
  
  // XML → JSON 변환
  function convertXMLToJSON(xmlString) {
    const parser = new DOMParser();
    const xmlDoc = parser.parseFromString(xmlString, "text/xml");
    return xmlToJson(xmlDoc); // 재귀적 변환 함수 필요
  }
  ```

#### 문서 파일 변환 모듈 추가
- **작업 내용**: 문서 파일 변환 기능 추가
- **구현 방법**:
  - PDF, DOCX, TXT, RTF, ODT 등 형식 간 변환
  - PDF.js, Mammoth.js 등 라이브러리 통합
  - 텍스트 추출, 페이지 분할 기능
- **예상 코드 변경**:
  ```javascript
  // document-converter.js 신규 파일 생성
  import * as pdfjs from 'pdfjs-dist';
  import * as mammoth from 'mammoth';
  
  // PDF → 텍스트 추출
  async function extractTextFromPDF(pdfData) {
    const pdf = await pdfjs.getDocument(pdfData).promise;
    let text = '';
    
    for (let i = 1; i <= pdf.numPages; i++) {
      const page = await pdf.getPage(i);
      const content = await page.getTextContent();
      text += content.items.map(item => item.str).join(' ') + '\n';
    }
    
    return text;
  }
  
  // DOCX → HTML 변환
  async function convertDocxToHtml(docxData) {
    const result = await mammoth.convertToHtml({arrayBuffer: docxData});
    return result.value;
  }
  ```

#### 오디오 파일 변환 기능 구현
- **작업 내용**: 오디오 파일 변환 기능 추가
- **구현 방법**:
  - MP3, WAV, FLAC, AAC, OGG 등 형식 지원
  - Web Audio API와 FFmpeg 활용
  - 비트레이트 조절, 오디오 길이 편집 기능
- **예상 코드 변경**:
  ```javascript
  // audio-converter.js 신규 파일 생성
  import { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';
  
  const ffmpeg = createFFmpeg({ log: true });
  
  async function convertAudio(inputFile, outputFormat, options = {}) {
    await ffmpeg.load();
    ffmpeg.FS('writeFile', 'input', await fetchFile(inputFile));
    
    let args = ['-i', 'input'];
    
    // 비트레이트 옵션
    if (options.bitrate) {
      args = args.concat(['-b:a', options.bitrate]);
    }
    
    // 샘플레이트 옵션
    if (options.sampleRate) {
      args = args.concat(['-ar', options.sampleRate]);
    }
    
    args = args.concat([`output.${outputFormat}`]);
    await ffmpeg.run(...args);
    
    const data = ffmpeg.FS('readFile', `output.${outputFormat}`);
    return new Uint8Array(data.buffer);
  }
  ```

#### 통합 파일 변환 UI 개발
- **작업 내용**: 모든 파일 유형을 처리할 수 있는 통합 인터페이스 개발
- **구현 방법**:
  - 파일 유형 자동 감지 로직
  - 카테고리별 변환 옵션 동적 로드
  - 일괄 처리 및 큐 시스템 구현
- **예상 코드 변경**:
  ```javascript
  // unified-converter.js 신규 파일 생성
  
  // 파일 유형 감지
  function detectFileType(file) {
    const extension = getFileExtension(file.name).toLowerCase();
    const type = file.type;
    
    // 이미지 파일 감지
    if (type.startsWith('image/') || ['png', 'jpg', 'jpeg', 'gif', 'webp', 'svg', 'tiff', 'heic', 'avif'].includes(extension)) {
      return 'image';
    }
    
    // 비디오 파일 감지
    if (type.startsWith('video/') || ['mp4', 'webm', 'avi', 'mov', 'flv'].includes(extension)) {
      return 'video';
    }
    
    // 오디오 파일 감지
    if (type.startsWith('audio/') || ['mp3', 'wav', 'ogg', 'flac', 'aac'].includes(extension)) {
      return 'audio';
    }
    
    // 문서 파일 감지
    if (['pdf', 'docx', 'doc', 'rtf', 'odt', 'txt'].includes(extension)) {
      return 'document';
    }
    
    // 데이터 파일 감지
    if (['csv', 'json', 'xml', 'yaml', 'yml', 'xlsx', 'xls'].includes(extension)) {
      return 'data';
    }
    
    return 'unknown';
  }
  
  // 파일 유형에 따른 변환 옵션 로드
  function loadConversionOptions(fileType) {
    switch(fileType) {
      case 'image':
        return loadImageConversionOptions();
      case 'video':
        return loadVideoConversionOptions();
      case 'audio':
        return loadAudioConversionOptions();
      case 'document':
        return loadDocumentConversionOptions();
      case 'data':
        return loadDataConversionOptions();
      default:
        return { formats: [], options: [] };
    }
  }
  ```

### 3. JavaScript 기능 개선

#### 사용자 경험 개선 스크립트
- **작업 내용**: 드래그 앤 드롭 인터페이스 및 실시간 미리보기 향상
- **구현 방법**:
  - `converter.js` 파일의 드래그 앤 드롭 기능 개선
  - 업로드 진행 상태 표시 애니메이션 추가
  - 파일 유효성 검사 강화

#### QR 코드 생성기 기능 확장
- **작업 내용**: `qrcode-generator.js` 파일에 새로운 커스터마이징 옵션 추가
- **구현 방법**:
  - 로고 삽입 기능 추가
  - 색상 그라데이션 옵션 지원
  - QR 코드 모서리 스타일 커스터마이징

#### 통계 및 분석 스크립트 추가
- **작업 내용**: 사용 통계 수집을 위한 `analytics.js` 파일 생성
- **구현 방법**:
  - 변환 유형별 사용 빈도 추적
  - 사용자 세션 정보 익명화 수집
  - Google Analytics 이벤트 추적 연동

### 4. 새로운 페이지 및 기능 추가

#### 블로그 섹션 구축
- **작업 내용**: `blog.html` 및 개별 블로그 포스트 페이지 작성
- **구현 방법**:
  - 블로그 인덱스 페이지 (`blog.html`) 생성
  - 블로그 포스트 템플릿 개발
  - 카테고리 및 태그 기능 추가

#### 파일 형식 사전 페이지
- **작업 내용**: 각 파일 형식에 대한 상세 페이지 작성
- **구현 방법**:
  - 주요 파일 형식별 페이지 생성 (png.html, jpg.html, csv.html 등)
  - 형식 간 비교 페이지 작성 (png-vs-jpg.html 등)

#### 변환 조합별 전용 페이지
- **작업 내용**: 인기 있는 변환 조합에 대한 전용 랜딩 페이지
- **구현 방법**:
  - "PNG에서 JPG로 변환하기", "CSV에서 JSON으로 변환하기" 등의 페이지 작성
  - 직접 변환 인터페이스와 상세 가이드 통합

#### 쿠키 정책 및 동의 시스템
- **작업 내용**: 쿠키 정책 페이지 및 동의 배너 구현
- **구현 방법**:
  - `cookie-policy.html` 페이지 작성
  - 쿠키 동의 배너용 JavaScript 작성
  - 동의 상태 저장 및 관리 로직 구현

### 5. CSS 스타일 개선

#### 반응형 디자인 강화
- **작업 내용**: `styles.css` 파일에 반응형 규칙 추가
- **구현 방법**:
  - 모바일 친화적 UI를 위한 미디어 쿼리 확장
  - 터치 타겟 크기 최적화 (최소 44x44px)
  - 유동적 그리드 시스템 적용

#### 다크 모드 지원
- **작업 내용**: 다크 모드 스타일시트 추가 (`dark-mode.css`)
- **구현 방법**:
  - 색상 변수 시스템 도입
  - 다크/라이트 테마 전환 메커니즘 구현
  - 시스템 설정 감지 기능

#### UI 애니메이션 개선
- **작업 내용**: 사용자 경험 향상을 위한 애니메이션 추가
- **구현 방법**:
  - 로딩 애니메이션 개선
  - 전환 효과 추가
  - 미세한 인터랙션 피드백

## 코딩 이외의 추가 작업

### 1. 콘텐츠 작성 및 마케팅

#### 블로그 콘텐츠 작성
- **작업 내용**: 최소 10-20개의 블로그 포스트 작성
- **주요 주제**:
  - "PNG vs JPG: 어떤 이미지 포맷을 사용해야 할까?"
  - "QR 코드로 마케팅 효과 높이는 10가지 방법"
  - "모바일에 최적화된 이미지 형식 선택 가이드"
  - "CSV와 JSON: 데이터 파일 형식의 차이점과 활용법"
  - "동영상 압축: 화질은 유지하면서 파일 크기 줄이기"
  - "문서 파일 형식 완벽 가이드: PDF, DOCX, ODT 비교"

#### 파일 형식 가이드 작성
- **작업 내용**: 각 파일 형식에 대한 상세 정보 페이지 작성
- **포함 내용**:
  - 파일 형식 역사 및 개발 배경
  - 기술적 특징 및 사양
  - 최적 사용 사례 및 제한사항
  - 대체 형식과의 비교
- **형식별 가이드**: 
  - 이미지: PNG, JPEG, WebP, GIF, SVG, TIFF, AVIF, HEIC
  - 비디오: MP4, WebM, AVI, MOV, MKV
  - 오디오: MP3, WAV, FLAC, AAC, OGG
  - 문서: PDF, DOCX, RTF, ODT, TXT
  - 데이터: CSV, JSON, YAML, XML, XLSX

#### 업종별 QR 코드 활용 가이드
- **작업 내용**: 다양한 산업/업종별 QR 코드 활용법 작성
- **대상 업종**:
  - 소매업 (매장 내 상품 정보, 할인 쿠폰 등)
  - 요식업 (메뉴, 온라인 주문, 리뷰 링크 등)
  - 이벤트/전시 (입장권, 부스 정보, 일정 등)
  - 교육 (학습 자료, 과제 제출, 출석 체크 등)
  - 부동산 (매물 정보, 가상 투어, 연락처 등)

### 2. 법적/정책적 문서 작성

#### 이용약관 작성
- **작업 내용**: 완전한 이용약관 문서 작성
- **포함 내용**:
  - 서비스 이용 조건
  - 사용자 책임 및 제한 사항
  - 지적 재산권 정책
  - 파일 변환 및 QR 코드 생성 관련 특정 조항
  - 서비스 변경 및 해지 정책

#### 개인정보처리방침 업데이트
- **작업 내용**: 현재 privacy.html의 내용 업데이트
- **포함 내용**:
  - 수집하는 정보의 유형 및 사용 목적
  - 쿠키 및 유사 기술 사용에 대한 정보
  - 정보 공유 및 제3자 서비스 (애드센스 포함)
  - 사용자 권리 및 정보 보호 방법
  - 개인정보 관리자 연락처

#### 쿠키 정책 문서
- **작업 내용**: 별도의 쿠키 정책 문서 작성
- **포함 내용**:
  - 사용하는 쿠키 유형 (필수, 기능, 분석, 광고)
  - 각 쿠키의 목적 및 저장 기간
  - 제3자 쿠키 정보 (Google 애드센스, 애널리틱스)
  - 쿠키 관리 및 거부 방법
  - 쿠키 사용 동의 철회 절차

### 3. SEO 및 마케팅 전략

#### 키워드 연구 및 최적화
- **작업 내용**: 주요 키워드 선정 및 콘텐츠 최적화
- **접근 방법**:
  - 경쟁사 키워드 분석 (CloudConvert, Zamzar 등)
  - Google 키워드 플래너 활용
  - "how to convert [format] to [format]" 유형 키워드 발굴
  - 롱테일 키워드 발굴 및 타겟팅 (특히 새로 지원하는 파일 형식 관련)

#### 외부 링크 구축 전략
- **작업 내용**: 웹사이트 권위 강화를 위한 백링크 구축
- **접근 방법**:
  - 관련 블로그 및 포럼에 유용한 정보 게시
  - 디자인, 개발, 마케팅 커뮤니티 참여
  - 파일 형식 가이드 및 인포그래픽 홍보
  - 협업 및 게스트 포스팅

#### 소셜 미디어 전략
- **작업 내용**: 소셜 미디어를 통한 콘텐츠 홍보
- **채널 선정**:
  - 전문가용: LinkedIn, Twitter
  - 시각적 콘텐츠: Pinterest, Instagram
  - 일반 사용자: Facebook
- **콘텐츠 유형**:
  - 정보성 그래픽
  - 짧은 튜토리얼 및 팁
  - QR 코드 활용 사례 공유
  - 시즌별 특화 콘텐츠

### 4. 애드센스 최적화

#### 애드센스 계정 설정
- **작업 내용**: Google 애드센스 계정 설정 및 최적화
- **접근 방법**:
  - 계정 생성 및 검증
  - 사이트 정보 정확히 입력
  - 광고 선호도 설정 (광고 유형, 카테고리 제한 등)
  - 자동 광고 vs 수동 광고 결정

#### 광고 위치 최적화
- **작업 내용**: 효과적인 광고 위치 선정
- **권장 위치**:
  - 콘텐츠 상단 (제목 아래)
  - 콘텐츠 중간 (자연스러운 단락 사이)
  - 콘텐츠 하단 (결론 아래)
  - 사이드바 (데스크톱 뷰)
  - 파일 변환 결과 페이지 (변환 완료 후)

### 5. 사용자 경험 및 접근성 향상

#### 웹사이트 접근성 향상
- **작업 내용**: WCAG 지침을 따른 접근성 개선
- **주요 영역**:
  - 적절한 색상 대비
  - 키보드 탐색 지원
  - 스크린 리더 호환성
  - 대체 텍스트 및 ARIA 레이블
  - 명확한 에러 메시지 및 지침

#### 사용자 피드백 수집 시스템
- **작업 내용**: 사용자 의견 수집 기능 구현
- **접근 방법**:
  - 간단한 피드백 폼 추가
  - 변환 결과 평가 옵션
  - 기능 요청 시스템
  - 버그 신고 메커니즘
- **데이터 활용**: 지속적인 서비스 개선 및 새로운 파일 형식 지원 결정에 활용