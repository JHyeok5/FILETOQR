파일 변환 및 QR 코드 생성 플랫폼 시스템 구축안 (v2.0)

✅ 프론트엔드 구성
- Tailwind CSS를 활용한 반응형 디자인 (모바일, 태블릿, 데스크톱 최적화)
- Convertio 스타일의 직관적인 드래그앤드롭 인터페이스 구현
- 진행 상태 표시 및 실시간 피드백 시스템
- 테마 지원 (라이트/다크 모드)
- 접근성 표준(WCAG 2.1) 준수

✅ 파일 처리 엔진
- FileReader, Canvas, Blob, Web Worker API 활용
- 파일 크기 제한 및 용량 최적화 기능 (20MB 기본 제한)
- 압축률/품질 조절 슬라이더 인터페이스
- 일괄 변환 및 처리 큐 시스템
- 드래그앤드롭, 클립보드 붙여넣기, 카메라 캡처 지원

✅ 확장 파일 포맷 지원
◉ 이미지: PNG, JPG/JPEG, WebP, GIF, SVG, BMP, TIFF, HEIC, AVIF, ICO
◉ 문서: PDF, DOCX, TXT, RTF, ODT, PPTX, XLSX
◉ 오디오: MP3, WAV, FLAC, AAC, OGG, M4A
◉ 비디오: MP4, WebM, AVI, MOV, MKV (미리보기 및 짧은 영상 한정)
◉ 데이터: CSV, JSON, YAML, XML, TSV, SQL, XLSX, TOML

✅ 고급 데이터 처리
- 텍스트 인코딩/디코딩 (Base64, URL, HTML 등)
- 해시 생성 (MD5, SHA-1, SHA-256)
- 데이터 형식 검증 및 구조화 도구
- 데이터 필터링 및 필드 매핑 인터페이스
- 문자 인코딩 감지 및 변환 (UTF-8, UTF-16, ASCII 등)

✅ QR 코드 고급 기능
- qrcode.js 또는 QRious 라이브러리 활용
- 다양한 콘텐츠 유형 지원 (URL, Wi-Fi, vCard, 이메일, SMS, 지오로케이션 등)
- 커스터마이징 옵션 (색상, 배경, 로고 삽입, 모서리 스타일, 오류 수정 레벨)
- 일괄 생성 및 다운로드 (ZIP 압축)
- 동적 QR 코드 미리보기 및 테스트 스캔 기능

✅ 보안 및 개인정보 보호
- SubtleCrypto API를 활용한 클라이언트 사이드 암호화
- 사용자 데이터는 브라우저 내에서만 처리 (서버 전송 없음)
- 민감 정보 자동 삭제 (세션 종료 시)
- 쿠키 정책 및 동의 시스템 구현
- HTTPS 통신 및 콘텐츠 보안 정책 적용

✅ 성능 최적화
- Web Worker를 통한 백그라운드 처리 (UI 블로킹 방지)
- 지연 로딩 및 코드 스플리팅 적용
- IndexedDB를 활용한 처리 중인 파일 임시 저장
- 캐시 전략 및 서비스 워커 구현 (오프라인 기능)
- 메모리 사용량 모니터링 및 최적화

✅ 호스팅 및 배포
- GitHub Pages를 활용한 정적 웹 호스팅
- GitHub Actions를 통한 CI/CD 파이프라인 구성
- 버전 관리 및 릴리스 태깅 자동화
- 캐시 무효화 전략 및 업데이트 알림 시스템
- 도메인 및 SSL 인증서 설정

✅ 사용자 경험 향상
- 직관적인 튜토리얼 및 가이드 (툴팁, 예시)
- 최근 변환 이력 저장 및 재사용
- 파일 형식별 권장 설정 제안
- 기기/브라우저 호환성 감지 및 안내
- 다국어 지원 (한국어, 영어 우선)

✅ 수익화 모델
- Google AdSense 전략적 배치 (UX 방해 최소화)
- 광고 표시 위치: 결과 하단, 사이드바, 변환 대기 시간
- 프리미엄 기능 안내 (용량 제한 해제, 일괄 처리 등)
- 제휴 마케팅 기회 (파일 관련 서비스)
- 사용 통계 수집 및 분석 (개인정보 익명화)

✅ 콘텐츠 및 문서화
- 각 파일 형식별 상세 가이드 페이지
- SEO 최적화된 변환 조합 전용 페이지
- 업종별 QR 코드 활용 사례 블로그
- 도움말/FAQ 센터 (문제 해결, 사용 팁)
- 이용약관 및 개인정보처리방침

✅ 오류 처리 및 유지보수
- 세분화된 오류 코드 및 사용자 친화적 메시지
- 브라우저 호환성 문제 감지 및 대안 제시
- 사용자 피드백 수집 시스템
- 로그 기록 및 분석 (디버깅 용이성)
- 정기적인 라이브러리 업데이트 및 보안 점검

✅ 바이브코딩 가이드라인 준수
- 코드 품질 및 설계 원칙 적용
- 명확한 아키텍처 및 모듈화 구조
- 상세한 주석 및 문서화
- 확장성 및 유지보수성 고려
- 사용자 중심 설계 및 접근성 우선