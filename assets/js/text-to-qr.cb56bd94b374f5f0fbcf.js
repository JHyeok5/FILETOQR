"use strict";(self.webpackChunkfiletoqr=self.webpackChunkfiletoqr||[]).push([[664],{666:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('/* harmony import */ var _qr_generator_qr_generator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(890);\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return r; }; var t, r = {}, e = Object.prototype, n = e.hasOwnProperty, o = "function" == typeof Symbol ? Symbol : {}, i = o.iterator || "@@iterator", a = o.asyncIterator || "@@asyncIterator", u = o.toStringTag || "@@toStringTag"; function c(t, r, e, n) { return Object.defineProperty(t, r, { value: e, enumerable: !n, configurable: !n, writable: !n }); } try { c({}, ""); } catch (t) { c = function c(t, r, e) { return t[r] = e; }; } function h(r, e, n, o) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype); return c(a, "_invoke", function (r, e, n) { var o = 1; return function (i, a) { if (3 === o) throw Error("Generator is already running"); if (4 === o) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var u = n.delegate; if (u) { var c = d(u, n); if (c) { if (c === f) continue; return c; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (1 === o) throw o = 4, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = 3; var h = s(r, e, n); if ("normal" === h.type) { if (o = n.done ? 4 : 2, h.arg === f) continue; return { value: h.arg, done: n.done }; } "throw" === h.type && (o = 4, n.method = "throw", n.arg = h.arg); } }; }(r, n, new Context(o || [])), !0), a; } function s(t, r, e) { try { return { type: "normal", arg: t.call(r, e) }; } catch (t) { return { type: "throw", arg: t }; } } r.wrap = h; var f = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var l = {}; c(l, i, function () { return this; }); var p = Object.getPrototypeOf, y = p && p(p(x([]))); y && y !== e && n.call(y, i) && (l = y); var v = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(l); function g(t) { ["next", "throw", "return"].forEach(function (r) { c(t, r, function (t) { return this._invoke(r, t); }); }); } function AsyncIterator(t, r) { function e(o, i, a, u) { var c = s(t[o], t, i); if ("throw" !== c.type) { var h = c.arg, f = h.value; return f && "object" == _typeof(f) && n.call(f, "__await") ? r.resolve(f.__await).then(function (t) { e("next", t, a, u); }, function (t) { e("throw", t, a, u); }) : r.resolve(f).then(function (t) { h.value = t, a(h); }, function (t) { return e("throw", t, a, u); }); } u(c.arg); } var o; c(this, "_invoke", function (t, n) { function i() { return new r(function (r, o) { e(t, n, r, o); }); } return o = o ? o.then(i, i) : i(); }, !0); } function d(r, e) { var n = e.method, o = r.i[n]; if (o === t) return e.delegate = null, "throw" === n && r.i["return"] && (e.method = "return", e.arg = t, d(r, e), "throw" === e.method) || "return" !== n && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), f; var i = s(o, r.i, e.arg); if ("throw" === i.type) return e.method = "throw", e.arg = i.arg, e.delegate = null, f; var a = i.arg; return a ? a.done ? (e[r.r] = a.value, e.next = r.n, "return" !== e.method && (e.method = "next", e.arg = t), e.delegate = null, f) : a : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f); } function w(t) { this.tryEntries.push(t); } function m(r) { var e = r[4] || {}; e.type = "normal", e.arg = t, r[4] = e; } function Context(t) { this.tryEntries = [[-1]], t.forEach(w, this), this.reset(!0); } function x(r) { if (null != r) { var e = r[i]; if (e) return e.call(r); if ("function" == typeof r.next) return r; if (!isNaN(r.length)) { var o = -1, a = function e() { for (; ++o < r.length;) if (n.call(r, o)) return e.value = r[o], e.done = !1, e; return e.value = t, e.done = !0, e; }; return a.next = a; } } throw new TypeError(_typeof(r) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, c(v, "constructor", GeneratorFunctionPrototype), c(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = c(GeneratorFunctionPrototype, u, "GeneratorFunction"), r.isGeneratorFunction = function (t) { var r = "function" == typeof t && t.constructor; return !!r && (r === GeneratorFunction || "GeneratorFunction" === (r.displayName || r.name)); }, r.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, c(t, u, "GeneratorFunction")), t.prototype = Object.create(v), t; }, r.awrap = function (t) { return { __await: t }; }, g(AsyncIterator.prototype), c(AsyncIterator.prototype, a, function () { return this; }), r.AsyncIterator = AsyncIterator, r.async = function (t, e, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(h(t, e, n, o), i); return r.isGeneratorFunction(e) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, g(v), c(v, u, "Generator"), c(v, i, function () { return this; }), c(v, "toString", function () { return "[object Generator]"; }), r.keys = function (t) { var r = Object(t), e = []; for (var n in r) e.unshift(n); return function t() { for (; e.length;) if ((n = e.pop()) in r) return t.value = n, t.done = !1, t; return t.done = !0, t; }; }, r.values = x, Context.prototype = { constructor: Context, reset: function reset(r) { if (this.prev = this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(m), !r) for (var e in this) "t" === e.charAt(0) && n.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0][4]; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(r) { if (this.done) throw r; var e = this; function n(t) { a.type = "throw", a.arg = r, e.next = t; } for (var o = e.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i[4], u = this.prev, c = i[1], h = i[2]; if (-1 === i[0]) return n("end"), !1; if (!c && !h) throw Error("try statement without catch or finally"); if (null != i[0] && i[0] <= u) { if (u < c) return this.method = "next", this.arg = t, n(c), !0; if (u < h) return n(h), !1; } } }, abrupt: function abrupt(t, r) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var n = this.tryEntries[e]; if (n[0] > -1 && n[0] <= this.prev && this.prev < n[2]) { var o = n; break; } } o && ("break" === t || "continue" === t) && o[0] <= r && r <= o[2] && (o = null); var i = o ? o[4] : {}; return i.type = t, i.arg = r, o ? (this.method = "next", this.next = o[2], f) : this.complete(i); }, complete: function complete(t, r) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && r && (this.next = r), f; }, finish: function finish(t) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var e = this.tryEntries[r]; if (e[2] === t) return this.complete(e[4], e[3]), m(e), f; } }, "catch": function _catch(t) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var e = this.tryEntries[r]; if (e[0] === t) { var n = e[4]; if ("throw" === n.type) { var o = n.arg; m(e); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(r, e, n) { return this.delegate = { i: x(r), r: e, n: n }, "next" === this.method && (this.arg = t), f; } }, r; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }\n/**\n * file-to-qr-converter.js - FileToQR 텍스트 파일을 QR 코드로 변환하는 모듈\n * 버전: 1.0.0\n * 최종 업데이트: 2023-06-15\n */\n\n\n\n// 텍스트 파일을 QR 코드로 변환하는 모듈\nvar FileToQRConverter = {\n  // 내부 상태\n  state: {\n    initialized: false,\n    file: null,\n    fileContent: null,\n    maxFileSize: 1024 * 5,\n    // 5KB (QR 코드는 용량 제한이 있음)\n    qrCanvas: null,\n    errorCorrectionLevel: \'M\',\n    // L: 7%, M: 15%, Q: 25%, H: 30% 오류 복구\n    qrSettings: {\n      margin: 4,\n      scale: 4,\n      width: 256,\n      color: {\n        dark: \'#000000\',\n        light: \'#ffffff\'\n      }\n    }\n  },\n  /**\n   * 모듈 초기화\n   * @returns {Promise<boolean>} 초기화 성공 여부\n   */\n  init: function init() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!_this.state.initialized) {\n              _context.next = 3;\n              break;\n            }\n            console.log(\'FileToQRConverter가 이미 초기화되어 있습니다.\');\n            return _context.abrupt("return", true);\n          case 3:\n            _context.prev = 3;\n            console.log(\'FileToQRConverter 초기화 시작...\');\n\n            // QR 코드 생성기 초기화\n            _context.next = 7;\n            return _qr_generator_qr_generator_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A.init();\n          case 7:\n            // UI 요소 초기화\n            _this._initUI();\n\n            // 이벤트 리스너 등록\n            _this._registerEventListeners();\n            _this.state.initialized = true;\n            console.log(\'FileToQRConverter 초기화 완료\');\n            return _context.abrupt("return", true);\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context["catch"](3);\n            console.error(\'FileToQRConverter 초기화 중 에러 발생:\', _context.t0);\n            return _context.abrupt("return", false);\n          case 18:\n          case "end":\n            return _context.stop();\n        }\n      }, _callee, null, [[3, 14]]);\n    }))();\n  },\n  /**\n   * UI 요소 초기화\n   * @private\n   */\n  _initUI: function _initUI() {\n    // 파일 업로드 영역 생성\n    var fileUploadSection = document.getElementById(\'file-upload-section\');\n    if (fileUploadSection) {\n      // 파일 업로드 영역이 이미 있는 경우, 필요한 요소만 추가\n\n      // QR 코드 출력 영역 생성\n      var outputContainer = document.getElementById(\'conversion-output\');\n      if (outputContainer) {\n        outputContainer.innerHTML = "\\n          <h2 class=\\"text-xl font-semibold mb-4\\">QR \\uCF54\\uB4DC \\uBCC0\\uD658 \\uACB0\\uACFC</h2>\\n          <div class=\\"bg-gray-50 p-4 rounded-lg border border-gray-200 min-h-32 flex flex-col items-center\\">\\n            <div id=\\"qr-preview-container\\" class=\\"qr-preview-container mb-4\\">\\n              <div class=\\"text-center text-gray-500\\">\\n                \\uD14D\\uC2A4\\uD2B8 \\uD30C\\uC77C\\uC744 \\uC5C5\\uB85C\\uB4DC\\uD558\\uBA74 QR \\uCF54\\uB4DC\\uAC00 \\uC5EC\\uAE30\\uC5D0 \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4.\\n              </div>\\n            </div>\\n            <div id=\\"file-info\\" class=\\"w-full text-sm text-gray-600 mb-4 hidden\\">\\n              <div class=\\"p-3 bg-blue-50 rounded-md\\">\\n                <p class=\\"font-medium\\">\\uD30C\\uC77C \\uC815\\uBCF4:</p>\\n                <p id=\\"file-name\\">\\uD30C\\uC77C\\uBA85: </p>\\n                <p id=\\"file-size\\">\\uD30C\\uC77C \\uD06C\\uAE30: </p>\\n                <p id=\\"character-count\\">\\uBB38\\uC790 \\uC218: </p>\\n              </div>\\n            </div>\\n\\n            <div id=\\"qr-settings\\" class=\\"w-full mb-4 hidden\\">\\n              <div class=\\"p-3 bg-gray-50 rounded-md\\">\\n                <h3 class=\\"font-medium mb-2\\">QR \\uCF54\\uB4DC \\uC124\\uC815</h3>\\n                <div class=\\"grid grid-cols-1 md:grid-cols-2 gap-4\\">\\n                  <div>\\n                    <label class=\\"block text-sm font-medium text-gray-700 mb-1\\">\\uC624\\uB958 \\uC218\\uC815 \\uB808\\uBCA8</label>\\n                    <select id=\\"error-correction\\" class=\\"w-full px-3 py-2 border rounded-md\\">\\n                      <option value=\\"L\\">\\uB0AE\\uC74C (7%)</option>\\n                      <option value=\\"M\\" selected>\\uC911\\uAC04 (15%)</option>\\n                      <option value=\\"Q\\">\\uB192\\uC74C (25%)</option>\\n                      <option value=\\"H\\">\\uCD5C\\uACE0 (30%)</option>\\n                    </select>\\n                  </div>\\n                  <div>\\n                    <label class=\\"block text-sm font-medium text-gray-700 mb-1\\">QR \\uCF54\\uB4DC \\uD06C\\uAE30</label>\\n                    <select id=\\"qr-size\\" class=\\"w-full px-3 py-2 border rounded-md\\">\\n                      <option value=\\"200\\">\\uC791\\uAC8C (200x200)</option>\\n                      <option value=\\"256\\" selected>\\uBCF4\\uD1B5 (256x256)</option>\\n                      <option value=\\"320\\">\\uD06C\\uAC8C (320x320)</option>\\n                      <option value=\\"400\\">\\uC544\\uC8FC \\uD06C\\uAC8C (400x400)</option>\\n                    </select>\\n                  </div>\\n                </div>\\n                <button id=\\"regenerate-qr\\" class=\\"mt-3 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md font-medium text-sm\\">\\uC124\\uC815 \\uC801\\uC6A9 \\uBC0F \\uC7AC\\uC0DD\\uC131</button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\"flex justify-center gap-4 mt-4\\">\\n            <button id=\\"download-qr-btn\\" class=\\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium disabled:opacity-50 disabled:cursor-not-allowed\\" disabled>\\n              QR \\uCF54\\uB4DC \\uB2E4\\uC6B4\\uB85C\\uB4DC\\n            </button>\\n            <button id=\\"convert-another-btn\\" class=\\"bg-gray-600 hover:bg-gray-700 text-white px-6 py-2 rounded-lg font-medium\\">\\n              \\uB2E4\\uB978 \\uD30C\\uC77C \\uBCC0\\uD658\\n            </button>\\n          </div>\\n        ";\n      }\n    }\n  },\n  /**\n   * 이벤트 리스너 등록\n   * @private\n   */\n  _registerEventListeners: function _registerEventListeners() {\n    var _this2 = this;\n    // 파일 업로드 이벤트 처리\n    var fileInput = document.getElementById(\'file-upload\');\n    if (fileInput) {\n      fileInput.addEventListener(\'change\', this._handleFileUpload.bind(this));\n    }\n\n    // 다운로드 버튼 이벤트 처리\n    var downloadBtn = document.getElementById(\'download-qr-btn\');\n    if (downloadBtn) {\n      downloadBtn.addEventListener(\'click\', this._handleDownload.bind(this));\n    }\n\n    // 다른 파일 변환 버튼 이벤트 처리\n    var convertAnotherBtn = document.getElementById(\'convert-another-btn\');\n    if (convertAnotherBtn) {\n      convertAnotherBtn.addEventListener(\'click\', this._resetConverter.bind(this));\n    }\n\n    // QR 코드 재생성 버튼 이벤트 처리\n    var regenerateBtn = document.getElementById(\'regenerate-qr\');\n    if (regenerateBtn) {\n      regenerateBtn.addEventListener(\'click\', this._regenerateQRCode.bind(this));\n    }\n\n    // 드래그 앤 드롭 이벤트 처리\n    var dropZone = document.querySelector(\'label[for="file-upload"]\');\n    if (dropZone) {\n      dropZone.addEventListener(\'dragover\', function (e) {\n        e.preventDefault();\n        dropZone.classList.add(\'bg-blue-100\');\n      });\n      dropZone.addEventListener(\'dragleave\', function () {\n        dropZone.classList.remove(\'bg-blue-100\');\n      });\n      dropZone.addEventListener(\'drop\', function (e) {\n        e.preventDefault();\n        dropZone.classList.remove(\'bg-blue-100\');\n        if (e.dataTransfer.files.length) {\n          fileInput.files = e.dataTransfer.files;\n          _this2._handleFileUpload({\n            target: fileInput\n          });\n        }\n      });\n    }\n  },\n  /**\n   * QR 코드 설정 업데이트\n   * @private\n   */\n  _updateQRSettings: function _updateQRSettings() {\n    // 오류 수정 레벨\n    var errorCorrectionSelect = document.getElementById(\'error-correction\');\n    if (errorCorrectionSelect) {\n      this.state.errorCorrectionLevel = errorCorrectionSelect.value;\n    }\n\n    // QR 코드 크기\n    var qrSizeSelect = document.getElementById(\'qr-size\');\n    if (qrSizeSelect) {\n      this.state.qrSettings.width = parseInt(qrSizeSelect.value, 10);\n    }\n  },\n  /**\n   * QR 코드 재생성\n   * @private\n   */\n  _regenerateQRCode: function _regenerateQRCode() {\n    var _this3 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var qrSettings, successMsg, existingMsg;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (_this3.state.fileContent) {\n              _context2.next = 3;\n              break;\n            }\n            alert(\'변환할 텍스트 파일을 먼저 업로드해주세요.\');\n            return _context2.abrupt("return");\n          case 3:\n            _this3._updateQRSettings();\n            _context2.next = 6;\n            return _this3._generateQRCode(_this3.state.fileContent);\n          case 6:\n            // 성공 메시지 표시\n            qrSettings = document.getElementById(\'qr-settings\');\n            if (qrSettings) {\n              successMsg = document.createElement(\'div\');\n              successMsg.className = \'text-green-600 text-sm mt-2 text-center\';\n              successMsg.textContent = \'QR 코드가 새 설정으로 재생성되었습니다.\';\n\n              // 기존 메시지 제거\n              existingMsg = qrSettings.querySelector(\'.text-green-600\');\n              if (existingMsg) existingMsg.remove();\n              qrSettings.appendChild(successMsg);\n\n              // 3초 후 메시지 자동 제거\n              setTimeout(function () {\n                if (successMsg.parentNode) {\n                  successMsg.remove();\n                }\n              }, 3000);\n            }\n          case 8:\n          case "end":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  },\n  /**\n   * 파일 업로드 핸들러\n   * @param {Event} event 파일 업로드 이벤트\n   * @private\n   */\n  _handleFileUpload: function _handleFileUpload(event) {\n    var _this4 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var file, isTextFile, content, outputContainer, qrSettings, downloadBtn;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            file = event.target.files[0];\n            if (file) {\n              _context3.next = 3;\n              break;\n            }\n            return _context3.abrupt("return");\n          case 3:\n            // 파일 유형 확인 (텍스트 파일만 허용)\n            isTextFile = file.type.match(\'text/plain\') || file.name.endsWith(\'.txt\');\n            if (isTextFile) {\n              _context3.next = 7;\n              break;\n            }\n            alert(\'텍스트 파일(.txt)만 지원됩니다.\');\n            return _context3.abrupt("return");\n          case 7:\n            if (!(file.size > _this4.state.maxFileSize)) {\n              _context3.next = 10;\n              break;\n            }\n            alert("\\uD30C\\uC77C \\uD06C\\uAE30\\uB294 ".concat(_this4.state.maxFileSize / 1024, "KB \\uC774\\uD558\\uC5EC\\uC57C \\uD569\\uB2C8\\uB2E4. (QR \\uCF54\\uB4DC \\uC6A9\\uB7C9 \\uC81C\\uD55C)"));\n            return _context3.abrupt("return");\n          case 10:\n            // 로딩 표시 설정\n            _this4._showLoadingState(true);\n            _context3.prev = 11;\n            // 파일 저장 및 처리\n            _this4.state.file = file;\n\n            // 파일 내용 읽기\n            _context3.next = 15;\n            return _this4._readFileContent(file);\n          case 15:\n            content = _context3.sent;\n            _this4.state.fileContent = content;\n\n            // 파일 정보 표시\n            _this4._showFileInfo(file, content);\n\n            // QR 코드 생성\n            _context3.next = 20;\n            return _this4._generateQRCode(content);\n          case 20:\n            // 출력 영역 표시\n            outputContainer = document.getElementById(\'conversion-output\');\n            if (outputContainer) {\n              outputContainer.classList.remove(\'hidden\');\n            }\n\n            // 설정 영역 표시\n            qrSettings = document.getElementById(\'qr-settings\');\n            if (qrSettings) {\n              qrSettings.classList.remove(\'hidden\');\n            }\n\n            // 다운로드 버튼 활성화\n            downloadBtn = document.getElementById(\'download-qr-btn\');\n            if (downloadBtn) {\n              downloadBtn.disabled = false;\n            }\n            _context3.next = 32;\n            break;\n          case 28:\n            _context3.prev = 28;\n            _context3.t0 = _context3["catch"](11);\n            console.error(\'파일 처리 중 오류 발생:\', _context3.t0);\n            _this4._showError(\'파일을 처리하는 중 오류가 발생했습니다.\');\n          case 32:\n            _context3.prev = 32;\n            // 로딩 상태 해제\n            _this4._showLoadingState(false);\n            return _context3.finish(32);\n          case 35:\n          case "end":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[11, 28, 32, 35]]);\n    }))();\n  },\n  /**\n   * 로딩 상태 표시\n   * @param {boolean} isLoading 로딩 중 여부\n   * @private\n   */\n  _showLoadingState: function _showLoadingState(isLoading) {\n    var qrContainer = document.getElementById(\'qr-preview-container\');\n    if (!qrContainer) return;\n    if (isLoading) {\n      qrContainer.innerHTML = "\\n        <div class=\\"text-center text-gray-500\\">\\n          <svg class=\\"animate-spin h-10 w-10 text-blue-500 mx-auto mb-2\\" xmlns=\\"http://www.w3.org/2000/svg\\" fill=\\"none\\" viewBox=\\"0 0 24 24\\">\\n            <circle class=\\"opacity-25\\" cx=\\"12\\" cy=\\"12\\" r=\\"10\\" stroke=\\"currentColor\\" stroke-width=\\"4\\"></circle>\\n            <path class=\\"opacity-75\\" fill=\\"currentColor\\" d=\\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\\"></path>\\n          </svg>\\n          <p>QR \\uCF54\\uB4DC \\uC0DD\\uC131 \\uC911...</p>\\n        </div>\\n      ";\n    }\n  },\n  /**\n   * 오류 메시지 표시\n   * @param {string} message 오류 메시지\n   * @private\n   */\n  _showError: function _showError(message) {\n    var qrContainer = document.getElementById(\'qr-preview-container\');\n    if (!qrContainer) return;\n    qrContainer.innerHTML = "\\n      <div class=\\"text-center text-red-500\\">\\n        <svg class=\\"h-10 w-10 text-red-500 mx-auto mb-2\\" fill=\\"none\\" viewBox=\\"0 0 24 24\\" stroke=\\"currentColor\\">\\n          <path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" d=\\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\\"></path>\\n        </svg>\\n        <p>".concat(message, "</p>\\n      </div>\\n    ");\n  },\n  /**\n   * 파일 내용 읽기\n   * @param {File} file 텍스트 파일\n   * @returns {Promise<string>} 파일 내용\n   * @private\n   */\n  _readFileContent: function _readFileContent(file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n      reader.onload = function (event) {\n        resolve(event.target.result);\n      };\n      reader.onerror = function (error) {\n        console.error(\'파일 읽기 오류:\', error);\n        reject(error);\n      };\n      reader.readAsText(file);\n    });\n  },\n  /**\n   * 파일 정보 표시\n   * @param {File} file 파일 객체\n   * @param {string} content 파일 내용\n   * @private\n   */\n  _showFileInfo: function _showFileInfo(file, content) {\n    var fileInfo = document.getElementById(\'file-info\');\n    var fileName = document.getElementById(\'file-name\');\n    var fileSize = document.getElementById(\'file-size\');\n    var charCount = document.getElementById(\'character-count\');\n    if (fileInfo && fileName && fileSize && charCount) {\n      fileName.textContent = "\\uD30C\\uC77C\\uBA85: ".concat(file.name);\n      fileSize.textContent = "\\uD30C\\uC77C \\uD06C\\uAE30: ".concat((file.size / 1024).toFixed(2), " KB");\n      charCount.textContent = "\\uBB38\\uC790 \\uC218: ".concat(content.length, " \\uC790");\n      fileInfo.classList.remove(\'hidden\');\n\n      // 경고 표시 - 문자 수가 많을 경우\n      if (content.length > 500) {\n        var warning = document.createElement(\'p\');\n        warning.className = \'text-amber-600 mt-2\';\n        warning.textContent = \'* 문자 수가 많아 QR 코드 인식이 어려울 수 있습니다. 길이를 줄이는 것이 좋습니다.\';\n        fileInfo.appendChild(warning);\n      }\n    }\n  },\n  /**\n   * QR 코드 생성\n   * @param {string} content QR 코드에 인코딩할 내용\n   * @private\n   */\n  _generateQRCode: function _generateQRCode(content) {\n    var _this5 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var qrContainer, canvas, qrSettings;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            qrContainer = document.getElementById(\'qr-preview-container\');\n            if (qrContainer) {\n              _context4.next = 3;\n              break;\n            }\n            return _context4.abrupt("return");\n          case 3:\n            // 기존 캔버스 삭제\n            qrContainer.innerHTML = \'\';\n\n            // 새 캔버스 생성\n            canvas = document.createElement(\'canvas\');\n            canvas.width = _this5.state.qrSettings.width;\n            canvas.height = _this5.state.qrSettings.width;\n            qrContainer.appendChild(canvas);\n            _this5.state.qrCanvas = canvas;\n\n            // QR 코드 생성\n            _context4.prev = 9;\n            _context4.next = 12;\n            return _qr_generator_qr_generator_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A.state.qrLibrary.toCanvas(canvas, content, {\n              width: _this5.state.qrSettings.width,\n              margin: _this5.state.qrSettings.margin,\n              color: _this5.state.qrSettings.color,\n              errorCorrectionLevel: _this5.state.errorCorrectionLevel\n            });\n          case 12:\n            // 캔버스 스타일 추가\n            canvas.style.maxWidth = \'100%\';\n            canvas.style.height = \'auto\';\n            canvas.classList.add(\'shadow-md\', \'rounded-md\');\n            _context4.next = 23;\n            break;\n          case 17:\n            _context4.prev = 17;\n            _context4.t0 = _context4["catch"](9);\n            console.error(\'QR 코드 생성 중 오류 발생:\', _context4.t0);\n            _this5._showError(\'QR 코드 생성에 실패했습니다. 텍스트 내용이 너무 길거나 특수 문자가 많습니다.\');\n\n            // 설정 영역 숨김\n            qrSettings = document.getElementById(\'qr-settings\');\n            if (qrSettings) {\n              qrSettings.classList.add(\'hidden\');\n            }\n          case 23:\n          case "end":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[9, 17]]);\n    }))();\n  },\n  /**\n   * QR 코드 다운로드 처리\n   * @private\n   */\n  _handleDownload: function _handleDownload() {\n    if (!this.state.qrCanvas) {\n      alert(\'QR 코드를 먼저 생성해주세요.\');\n      return;\n    }\n    try {\n      // 파일명 생성 (원본 파일명 + QR)\n      var originalFilename = this.state.file.name;\n      var filenameWithoutExt = originalFilename.replace(/\\.[^/.]+$/, \'\');\n      var filename = "".concat(filenameWithoutExt, "-QR.png");\n\n      // 다운로드 링크 생성\n      var link = document.createElement(\'a\');\n      link.download = filename;\n\n      // 고품질 이미지 설정\n      var dataUrl = this.state.qrCanvas.toDataURL(\'image/png\', 1.0);\n      link.href = dataUrl;\n      link.click();\n\n      // 다운로드 성공 메시지\n      var downloadBtn = document.getElementById(\'download-qr-btn\');\n      if (downloadBtn) {\n        var originalText = downloadBtn.textContent;\n        downloadBtn.textContent = \'다운로드 완료!\';\n        downloadBtn.classList.remove(\'bg-blue-600\', \'hover:bg-blue-700\');\n        downloadBtn.classList.add(\'bg-green-600\', \'hover:bg-green-700\');\n\n        // 3초 후 원래 상태로 복원\n        setTimeout(function () {\n          downloadBtn.textContent = originalText;\n          downloadBtn.classList.remove(\'bg-green-600\', \'hover:bg-green-700\');\n          downloadBtn.classList.add(\'bg-blue-600\', \'hover:bg-blue-700\');\n        }, 3000);\n      }\n    } catch (error) {\n      console.error(\'QR 코드 다운로드 중 오류 발생:\', error);\n      alert(\'QR 코드 다운로드에 실패했습니다.\');\n    }\n  },\n  /**\n   * 컨버터 초기화\n   * @private\n   */\n  _resetConverter: function _resetConverter() {\n    // 상태 초기화\n    this.state.file = null;\n    this.state.fileContent = null;\n    this.state.qrCanvas = null;\n\n    // UI 초기화\n    var fileInfo = document.getElementById(\'file-info\');\n    if (fileInfo) {\n      fileInfo.classList.add(\'hidden\');\n\n      // 경고 메시지 제거\n      var warning = fileInfo.querySelector(\'.text-amber-600\');\n      if (warning) warning.remove();\n    }\n    var qrContainer = document.getElementById(\'qr-preview-container\');\n    if (qrContainer) {\n      qrContainer.innerHTML = \'<div class="text-center text-gray-500">텍스트 파일을 업로드하면 QR 코드가 여기에 표시됩니다.</div>\';\n    }\n    var qrSettings = document.getElementById(\'qr-settings\');\n    if (qrSettings) {\n      qrSettings.classList.add(\'hidden\');\n    }\n    var downloadBtn = document.getElementById(\'download-qr-btn\');\n    if (downloadBtn) {\n      downloadBtn.disabled = true;\n      downloadBtn.classList.remove(\'bg-green-600\', \'hover:bg-green-700\');\n      downloadBtn.classList.add(\'bg-blue-600\', \'hover:bg-blue-700\');\n      downloadBtn.textContent = \'QR 코드 다운로드\';\n    }\n    var fileInput = document.getElementById(\'file-upload\');\n    if (fileInput) {\n      fileInput.value = \'\';\n    }\n    var outputContainer = document.getElementById(\'conversion-output\');\n    if (outputContainer) {\n      outputContainer.classList.add(\'hidden\');\n    }\n  }\n};\n\n// 글로벌 네임스페이스에 등록\nif (typeof window !== \'undefined\') {\n  window.FileToQR = window.FileToQR || {};\n  window.FileToQR.FileToQRConverter = FileToQRConverter;\n}\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (FileToQRConverter)));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///666\n')}},Q=>{Q.O(0,[420],(()=>{return B=666,Q(Q.s=B);var B}));Q.O()}]);